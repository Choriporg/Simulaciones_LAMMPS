units           real
dimension       3
boundary        p p p
atom_style      full


bond_style      harmonic
angle_style     harmonic
improper_style  harmonic 

##__Define como se calculan las interacciones entre átomos: van der waals a corta distancia(atracción/repuslión) y electrostáticas a larga #distancia (coul/long). 9 es el radio ##de corte.
pair_style      lj/cut/coul/long 9
pair_modify	mix arithmetic    ##sigma es promedio aritmetico, epsilon promedio geometrico

read_data      data_LJ_EQ.data


# Coeficientes de enlace, ángulos e impropios

bond_coeff      1 525.089 1.2676  # enlace 1, constante de fuerza K y longitud del enlace (N-O)
angle_coeff     1 4.553  120    # ángulo 1, constante de fuerza k y ángulo de equilibrio (O-N-O)
improper_coeff  1 0.183  0 

mass            1 22.98977 # Na
mass            2 14.0067  # N 
mass            3 15.9994 # O 

group           Na type 1
group           O type 3
group           N type 2



#neigh_modify    one 5000
neigh_modify delay 5 check yes

#_Parámetros de las interacciones de LJ entre pares de átomos_A. Anagnostopoulos et al,Molecular dynamics simulation of solar salt (NaNO3-KNO3) mixtures.
#pair_coeff     tipo tipo epsilon sigma

pair_coeff	    1 1 3.529640441415 2.407
pair_coeff      2 2 1.844843236133537 3.285
pair_coeff      3 3 2.136465465754864 3.431

##__Permite modificar el cálculo a 1, 2 y 3 enlaces. A 3 enlaces se mantiene el cálculo de las interacciones pq son importantes en sistemas cristalinos cargados.
special_bonds lj/coul 0.0 0.0 0.0
#fix             shake all shake 0.0001 20 0 b 1 a 1

replicate 6 4 2

##_Método para calcular interacciones de largo alcance en sistemas cargados(Particle-Particle Particle-Mesh). Las interacciones coulómbicas decaen como 1/r y no se pueden ##truncar sin afectar la precisión.

kspace_style    pppm 1.0e-4

#--------------------------VARIABLES GLOBALES--------------------------------------------
variable        temp equal temp
variable        step equal step
variable        time equal time
variable        avogadro equal 6.02214e23
variable        vol equal vol
variable        volCM3 equal  (vol*1.0e-24)
variable        eTotal equal etotal
variable        NumAtoms equal count(all)
variable        densidad equal ((84.994/5)*v_NumAtoms)/(v_avogadro*v_vol*1.0e-24)
variable        etotalatom equal etotal/atoms
compute         msd all msd
variable	msd equal c_msd[4]

#------------------------CONVERSIÓN DE REAL A SI-----------------------------------------------
variable    kB equal 1.3806504e-23    # [J/K] Boltzmann
variable    atm2Pa equal 101325.0
variable    A2m equal 1.0e-10
variable    fs2s equal 1.0e-15
variable    convert equal ${atm2Pa}*${atm2Pa}*${fs2s}*${A2m}*${A2m}*${A2m}

compute         Stress all stress/atom NULL virial
compute         pe all pe/atom
compute         ke all ke/atom

thermo          1000
thermo_style    custom step temp ke pe etotal press pxx pyy pzz vol lx ly lz c_msd[4]

#### Archivos generados (Globales)
fix             impDensity all print 1000 "time: ${time} density:  ${densidad}" file densityTime.data screen no
fix             impVol all print 1000 "time: ${time} vol: ${volCM3}" file timeVol.data screen no
fix             impEtotal all print 1000 "time: ${time} Total_Energy: ${eTotal}" file totalE.data screen no
fix		impMSD all print 1000 "time: ${time} MSD: ${msd}" file timeMSD.data screen no
fix		impTempStep all print 1000 "time: ${time} temperature: ${temp}" file tempTime.data screen no
fix		impDensityTemp all print 1000 "temp: ${temp} density: ${densidad}" file densityTemp.data screen no


### Minimización para asegurar que configuración  inicial se estabilice antes de MD

minimize     0 1.e-4 2000 20000

reset_timestep 0


dump            mydump2 all custom 1000 dump_custom id element x y z vx vy vz c_pe c_ke c_Stress[1] c_Stress[2] c_Stress[3]
dump_modify     mydump2 element Na O N first yes


timestep        1  # 1 fs

#---------------------------------Equilibrio inicial---------------------------------------------

fix nvt all nvt temp 583.0 583.0 $(100*dt)	
#velocity        all create 583.0 4193182 rot yes mom yes dist gaussian
run 30000
unfix nvt

write_restart initialEQ.restart

#####------------------------------------- Calculo de viscosidad------------------------------------------
fix nve all nve
fix lang all press/langevin iso 0 0 $(1000*dt) temp 583 583 1234321 
run 50000#00 #5ns
unfix lang

write_restart visc1NVE.restart

#Viscosidad
variable 	pxy equal pxy
variable    pxz equal pxz
variable    pyz equal pyz
fix		aveStress all ave/correlate 10 100 1000 v_pxy v_pxz v_pyz type auto ave running


run 10000#00

variable     scale equal v_convert/(v_kB*v_temp)*v_vol*dt
variable 	viscXY equal trap(f_aveStress[3])*v_scale
variable    viscXZ equal trap(f_aveStress[4])*${scale}
variable    viscYZ equal trap(f_aveStress[5])*${scale}

run 1

variable visc1 equal (v_viscXY+v_viscXZ+v_viscYZ)/3
fix		printVisc all print 1000 "temp: ${temp} viscosidad: ${visc1}" file viscTemp.data screen no



run 1000

unfix nve
unfix printVisc
unfix aveStress

variable 	viscXY equal 0
variable    viscXZ equal 0
variable    viscYZ equal 0

#------------------------AUMENTO EN 50 GRADOS-------------------------------------------------------------
fix nvt all nvt temp 583.0 633.0 $(100*dt)
run 100000
unfix nvt

write_restart temp633.restart

fix nve all nve
fix lang all press/langevin iso 0 0 $(1000*dt) temp 633 633 1234321 
run 50000#00 #5ns
unfix lang

write_restart visc2.restart

fix		aveStress all ave/correlate 10 100 1000 v_pxy v_pxz v_pyz type auto ave running


run 10000#00

variable     scale equal v_convert/(v_kB*v_temp)*v_vol*dt
variable 	viscXY equal trap(f_aveStress[3])*v_scale
variable    viscXZ equal trap(f_aveStress[4])*${scale}
variable    viscYZ equal trap(f_aveStress[5])*${scale}

variable visc2 equal (v_viscXY+v_viscXZ+v_viscYZ)/3
fix		printVisc all print 1000 "temp: ${temp} viscosidad: ${visc2}" append viscTemp.data screen no

run 1000

unfix nve
unfix printVisc
unfix aveStress

variable 	viscXY equal 0
variable    viscXZ equal 0
variable    viscYZ equal 0

#------------------------AUMENTO EN 50 GRADOS-------------------------------------------------------------
fix nvt all nvt temp 633.0 683.0 $(100*dt)
run 100000
unfix nvt

write_restart temp683.restart

fix nve all nve

#Debido a un errror estoy probando con un dumping más alto
fix lang all press/langevin iso 0 0 $(5000*dt) temp 683 683 1234321 
run 50000#00 #5ns
unfix lang

write_restart visc3.restart

fix		aveStress all ave/correlate 10 100 1000 v_pxy v_pxz v_pyz type auto ave running


run 10000#00

variable     scale equal v_convert/(v_kB*v_temp)*v_vol*dt
variable 	viscXY equal trap(f_aveStress[3])*v_scale
variable    viscXZ equal trap(f_aveStress[4])*${scale}
variable    viscYZ equal trap(f_aveStress[5])*${scale}

variable visc3 equal (v_viscXY+v_viscXZ+v_viscYZ)/3
fix		printVisc all print 1000 "temp: ${temp} viscosidad: ${visc3}" append viscTemp.data screen no


run 1000

unfix nve
unfix printVisc
unfix aveStress

variable 	viscXY equal 0
variable    viscXZ equal 0
variable    viscYZ equal 0

#------------------------AUMENTO EN 50 GRADOS-------------------------------------------------------------
fix nvt all nvt temp 683.0 733.0 $(100*dt)
run 100000
unfix nvt

write_restart temp733.restart

fix nve all nve
fix lang all press/langevin iso 0 0 $(1000*dt) temp 583 583 1234321 
run 50000#00 #5ns
unfix lang

write_restart visc4.restart

fix		aveStress all ave/correlate 10 100 1000 v_pxy v_pxz v_pyz type auto ave running


run 10000#00

variable     scale equal v_convert/(v_kB*v_temp)*v_vol*dt
variable 	viscXY equal trap(f_aveStress[3])*v_scale
variable    viscXZ equal trap(f_aveStress[4])*${scale}
variable    viscYZ equal trap(f_aveStress[5])*${scale}

variable visc4 equal (v_viscXY+v_viscXZ+v_viscYZ)/3
fix		printVisc all print 1000 "temp: ${temp} viscosidad: ${visc4}" append viscTemp.data screen no
write_data   data_LJ_visc.data
